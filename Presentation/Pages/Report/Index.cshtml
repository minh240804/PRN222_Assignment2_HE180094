@page
@model Presentation.Pages.Report.IndexModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "News Report";
}

<h2 class="mb-4">News Report</h2>


<form method="get" class="row g-3 mb-4">
    <div class="col-md-3">
        <label>Start</label>
        <input type="date" name="start" value="@Model.Start" class="form-control" />
    </div>
    <div class="col-md-3">
        <label>End</label>
        <input type="date" name="end" value="@Model.End" class="form-control" />
    </div>
    <div class="col-md-3">
        <label>Group</label>
        <select name="groupBy" class="form-select" onchange="this.form.submit()">
            <option value="">No Grouping</option>
            <option value="category" selected="@(Model.GroupBy == "category")">Group by Category</option>
            <option value="author" selected="@(Model.GroupBy == "author")">Group by Author</option>
        </select>
    </div>
    <div class="col-md-3">
        <button type="submit" class="btn btn-primary w-100">Filter</button>
    </div>
</form>

<div class="mb-3">
    <a asp-page-handler="ExportToExcel"
       asp-route-start="@Model.Start"
       asp-route-end="@Model.End"
       class="btn btn-success">
        <i class="bi bi-file-earmark-excel"></i> Export to Excel
    </a>
</div>

@if (string.IsNullOrEmpty(Model.GroupBy))
{
    <!-- No Grouping - Display as table -->
    <table class="table table-bordered table-striped">
        <thead class="table-light">
            <tr>
                <th>Title</th>
                <th>Author Email</th>
                <th>Author Name</th>
                <th>Category</th>
                <th>Created Date</th>
                <th>Status</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var n in Model.Articles)
            {
                <tr>
                    <td>@n.NewsTitle</td>
                    <td>@n.CreatedBy?.AccountEmail</td>
                    <td>@n.CreatedBy?.AccountName</td>
                    <td>@n.Category?.CategoryName</td>
                    <td>@n.CreatedDate?.ToString("yyyy-MM-dd")</td>
                    <td>@(n.NewsStatus == true ? "Active" : "Inactive")</td>
                </tr>
            }
        </tbody>
    </table>
}
else if (Model.GroupBy == "category")
{
    <!-- Group by Category -->
    var grouped = Model.Articles.GroupBy(n => n.Category?.CategoryName ?? "No Category")
                       .OrderBy(g => g.Key);
    
    @foreach (var group in grouped)
    {
        <div class="card mb-3">
            <div class="card-header bg-primary text-white">
                <h5 class="mb-0">
                    <i class="bi bi-folder"></i> @group.Key
                    <span class="badge bg-light text-dark ms-2">@group.Count() article(s)</span>
                </h5>
            </div>
            <div class="card-body p-0">
                <table class="table table-bordered table-striped mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Author Email</th>
                            <th>Author Name</th>
                            <th>Created Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var n in group.OrderByDescending(x => x.CreatedDate))
                        {
                            <tr>
                                <td>@n.NewsTitle</td>
                                <td>@n.CreatedBy?.AccountEmail</td>
                                <td>@n.CreatedBy?.AccountName</td>
                                <td>@n.CreatedDate?.ToString("yyyy-MM-dd")</td>
                                <td>@(n.NewsStatus == true ? "Active" : "Inactive")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}
else if (Model.GroupBy == "author")
{
    <!-- Group by Author -->
    var grouped = Model.Articles.GroupBy(n => new
    {
        Email = n.CreatedBy?.AccountEmail ?? "Unknown",
        Name = n.CreatedBy?.AccountName ?? "Unknown Author"
    })
                       .OrderBy(g => g.Key.Name);

    @foreach (var group in grouped)
    {
        <div class="card mb-3">
            <div class="card-header bg-success text-white">
                <h5 class="mb-0">
                    <i class="bi bi-person"></i> @group.Key.Name (@group.Key.Email)
                    <span class="badge bg-light text-dark ms-2">@group.Count() article(s)</span>
                </h5>
            </div>
            <div class="card-body p-0">
                <table class="table table-bordered table-striped mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Title</th>
                            <th>Category</th>
                            <th>Created Date</th>
                            <th>Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var n in group.OrderByDescending(x => x.CreatedDate))
                        {
                            <tr>
                                <td>@n.NewsTitle</td>
                                <td>@n.Category?.CategoryName</td>
                                <td>@n.CreatedDate?.ToString("yyyy-MM-dd")</td>
                                <td>@(n.NewsStatus == true ? "Active" : "Inactive")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
}

<script>window.isNewsList = true;</script>

<div class="mt-3">
    <p class="fw-bold mb-2">Summary:</p>
    <ul class="list-unstyled ms-3">
        <li><strong>Total:</strong> @Model.Articles.Count() article(s)</li>
        <li><strong>Active:</strong> <span class="text-success">@Model.ActiveCount article(s)</span></li>
        <li><strong>Inactive:</strong> <span class="text-danger">@Model.InactiveCount article(s)</span></li>
    </ul>
</div>
