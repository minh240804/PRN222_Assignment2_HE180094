@page
@model Presentation.Pages.CategoryManagement.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Category Management</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">@TempData["Success"]</div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<form method="get" class="mb-3 d-flex">
    <input type="text" name="search" class="form-control me-2" placeholder="Search..." value="@Model.Search" />

    <select name="active" class="form-select me-2" style="max-width:150px;">
        <option value="">All</option>
        <option value="true" selected="@(Model.Status?.ToString() == "True" ? "selected" : null)">Active</option>
        <option value="false" selected="@(Model.Status?.ToString() == "False" ? "selected" : null)">Inactive</option>
    </select>

    <button class="btn btn-primary">Filter</button>
</form>

<a href="javascript:void(0)" class="btn btn-primary" onclick="openCategoryCreate()">Create New</a>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Description</th>
            <th>Parent</th>
            <th>Status</th>
            <th style="width:140px;">Actions</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Categories == null || !Model.Categories.Any()  )
        {
            <tr>
                <td colspan="5" class="text-center">No categories found.</td>
            </tr>
        }
        else
        {
            @foreach (var c in Model.Categories)
            {
                <tr>
                    <td id="index_@(c.CategoryId - 1)">@c.CategoryName</td>
                    <td>@c.CategoryDesciption</td>
                    <td>@(c.ParentCategory?.CategoryName ?? "-")</td>
                    <td>@((c.IsActive ?? false) ? "Active" : "Inactive")</td>
                    <td>
                        <a href="javascript:void(0)" class="btn btn-sm btn-primary"
                           onclick="openCategoryEdit(@c.CategoryId)">Edit</a>
                        <form method="post" asp-page-handler="Delete" asp-route-id="@c.CategoryId" class="d-inline">
                            <button type="submit"
                                    class="btn btn-sm btn-danger"
                                    onclick="return confirm('Are you sure you want to delete this category?');">
                                Delete
                            </button>
                        </form>
                    </td>
                </tr>
            }
        }
        

        
    </tbody>
</table>

@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            <!-- Previous -->
            <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : "")">
                <a class="page-link"
                   asp-page="./Index"
                   asp-route-currentPage="@(Model.CurrentPage - 1)"
                   asp-route-search="@Model.Search"
                   asp-route-status="@Model.Status">
                    Previous
                </a>
            </li>

            @{
                int start = Math.Max(1, Model.CurrentPage - 2);
                int end = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
            }
            @for (int i = start; i <= end; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-page="./Index"
                       asp-route-currentPage="@i"
                       asp-route-search="@Model.Search"
                       asp-route-status="@Model.Status">
                        @i
                    </a>
                </li>
            }

            <!-- Next -->
            <li class="page-item @(Model.CurrentPage >= Model.TotalPages ? "disabled" : "")">
                <a class="page-link"
                   asp-page="./Index"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-search="@Model.Search"
                   asp-route-status="@Model.Status">
                    Next
                </a>
            </li>
        </ul>
    </nav>
}

<!-- Modal for popup form -->
<div id="categoryModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <!-- Form content will be loaded here -->
        </div>
    </div>
</div>

<script>window.isCategoryList = true;</script>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        // Mở modal: nạp form qua AJAX
        function openCategoryCreate() {
          $('#categoryModal .modal-content').load('/CategoryManagement/Form?IsModal=true', function () {
            $('#categoryModal').modal('show');
            wireUpValidator($('#categoryModal form[data-ajax="true"]'));
          });
        }
        function openCategoryEdit(id) {
          $('#categoryModal .modal-content').load('/CategoryManagement/Form/' + id + '?IsModal=true', function () {
            $('#categoryModal').modal('show');
            wireUpValidator($('#categoryModal form[data-ajax="true"]'));
          });
        }

        // Hàm re-init unobtrusive + tắt inline error nếu muốn
        function wireUpValidator($form) {
          $form.removeData('validator').removeData('unobtrusiveValidation');
          $.validator.unobtrusive.parse($form);

          // (tuỳ chọn) chỉ hiện lỗi ở summary, không hiện dưới mỗi input
          // const v = $form.data('validator');
          // if (v) v.settings.errorPlacement = function(){};
        }

        // Chặn submit mặc định -> submit AJAX
        $(document).on('submit', '#categoryModal form[data-ajax="true"]', function (e) {
          e.preventDefault();
          const $form = $(this);
          if (!$form.valid()) return; // client-side invalid -> ở lại modal

          $.ajax({
            url: $form.attr('action'),
            type: 'POST',
            data: $form.serialize(), // đã mang AntiForgery + IsModal
            success: function (res, _s, xhr) {
              const ct = (xhr.getResponseHeader('Content-Type') || '').toLowerCase();

              // THÀNH CÔNG: server trả JSON { success: true }
              if (ct.includes('application/json') && res && res.success) {
                $('#categoryModal').modal('hide');
                // refresh list: tạm thời reload trang
                location.reload();
                return;
              }

              // LỖI: server trả lại HTML fragment (Page())
              $('#categoryModal .modal-content').html(res);
              const $newForm = $('#categoryModal form[data-ajax="true"]');
              wireUpValidator($newForm);
              // Ép trigger để lỗi hiện ngay (nếu cần)
              $newForm.validate().form();
            },
            error: function (xhr) {
              $('#categoryModal .modal-content').html(
                xhr.responseText || '<div class="p-3 text-danger">Unexpected error.</div>'
              );
              const $newForm = $('#categoryModal form[data-ajax="true"]');
              if ($newForm.length) wireUpValidator($newForm);
            }
          });
        });
    </script>
}
