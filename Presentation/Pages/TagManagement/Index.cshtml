@page
@model Presentation.Pages.TagManagement.IndexModel
@{
    ViewData["Title"] = "Tag Management";
}

<h2>Tag Management</h2>

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Success"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["Error"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<button id="btnCreate" class="btn btn-success mb-3"
        data-url="@Url.Page("/TagManagement/Form")">
    + New Tag
</button>

<!-- ✅ Bọc phần bảng trong container để load ngầm -->
<div id="tagTableContainer">
    <table class="table table-bordered table-striped">
        <thead class="table-light">
            <tr>
                <th>Name</th>
                <th>Note</th>
                <th style="width:140px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var tag in Model.Tags)
            {
                <tr data-tag-id="@tag.TagId">
                    <td>@tag.TagName</td>
                    <td>@tag.Note</td>
                    <td>
                        <button class="btn btn-sm btn-primary"
                                data-url="@Url.Page("/TagManagement/Form", new { id = tag.TagId })">
                            Edit
                        </button>
                        <form asp-page-handler="Delete" asp-route-id="@tag.TagId" method="post"
                              onsubmit="return confirm('Are you sure you want to delete this tag?');"
                              style="display: inline;">
                            <button type="submit" class="btn btn-sm btn-danger">
                                 Delete
                            </button>
                        </form>
                    </td>
                </tr>
            }
            @if (!Model.Tags.Any())
            {
                <tr><td colspan="3" class="text-center">No tags found.</td></tr>
            }
        </tbody>
    </table>
</div>

<!-- Modal tạo/sửa -->
<div class="modal fade" id="formModal" tabindex="-1" aria-labelledby="formModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content"></div>
    </div>
</div>

@section Scripts {
    <script>
        // ✅ Hiển thị form tạo mới
        function showCreateForm() {
            const url = $('#btnCreate').data('url');
            $('#formModal .modal-content').load(url, function () {
                const modalEl = document.getElementById('formModal');
                const modal = new bootstrap.Modal(modalEl);
                modal.show();
            });
        }

        // ✅ Hiển thị form chỉnh sửa
        function showEditForm(id) {
            const url = `/TagManagement/Form?id=${id}`;
            $('#formModal .modal-content').load(url, function () {
                const modalEl = document.getElementById('formModal');
                const modal = new bootstrap.Modal(modalEl);
                modal.show();
            });
        }

        $(document).ready(function () {
            // Nút "New Tag"
            $('#btnCreate').on('click', function () {
                showCreateForm();
            });

            // Nút "Edit"
            $(document).on('click', '.btn-edit', function () {
                const url = $(this).data('url');
                $('#formModal .modal-content').load(url, function () {
                    const modalEl = document.getElementById('formModal');
                    const modal = new bootstrap.Modal(modalEl);
                    modal.show();
                });
            });
        });
    </script>

    <script>
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/notificationHub")
            .build();

        connection.on("TagDeleted", function (tagId, tagName) {
            toastr.info(`Tag "${tagName}" has been deleted.`);
            $(`tr[data-tag-id="${tagId}"]`).remove();

            if ($("table tbody tr").length === 0) {
                $("table tbody").html(`<tr><td colspan="3" class="text-center">No tags found.</td></tr>`);
            }
        });

        connection.on("TagCreated", function (tagId, tagName, note) {
            toastr.success(`New tag "${tagName}" created.`);
            $("#tagTableContainer").load(location.href + " #tagTableContainer > *", function () {
                console.log("Table reloaded after new tag created.");
            });
        });

        connection.on("TagUpdated", function (tagId, tagName, note) {
            toastr.info(`Tag "${tagName}" updated.`);
            $("#tagTableContainer").load(location.href + " #tagTableContainer > *", function () {
                console.log("Table reloaded after tag update.");
            });
        });

        connection.start().catch(err => console.error(err.toString()));
    </script>
}
